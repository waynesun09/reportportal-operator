apiVersion: v1
data:
  restic.sh: |-
    #!/bin/bash

    set -o errexit
    set -o nounset
    set -o pipefail
    #
    # Install restic and update postgres wal command

    # shellcheck disable=SC1090
    # shellcheck disable=SC1091

    # Load Generic Libraries
    . /libfile.sh
    . /liblog.sh
    . /libvalidations.sh
    . /libpostgresql.sh


    ########################
    # Load archive variables used on PostgreSQL configuration.
    # Globals:
    #   RESTIC_*, S3_*, AWS_*, ENABLE_RESTIC_BACKUP
    # Arguments:
    #   None
    # Returns:
    #   Series of exports to be used as 'eval' arguments
    #########################
    postgresql_archive_restic_env() {
        cat <<"EOF"
    # S3 settings
    export POSTGRESQL_BASE_BACKUP_DIR="${POSTGRESQL_BASE_BACKUP_DIR:-$POSTGRESQL_VOLUME_DIR/backup}"
    export RESTIC_BINARY_PATH="${RESTIC_BINARY_PATH:-/bitnami/postgresql/restic}"
    export ENABLE_RESTIC_BACKUP="${ENABLE_RESTIC_BACKUP:-}"
    export RESTIC_S3_BUCKET_INIT="${RESTIC_S3_BUCKET_INIT:-}"
    export RESTIC_PASSWORD="${RESTIC_PASSWORD:-}"
    export S3_ENDPOINT="${S3_ENDPOINT:-}"
    export S3_BUCKET_NAME="${S3_BUCKET_NAME:-}"
    export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID:-}"
    export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY:-}"
    EOF
    }


    ########################
    # Change postgresql.conf by setting archiving parameters
    # Globals:
    #   RESTIC_*, S3_*
    # Arguments:
    #   None
    # Returns:
    #   None
    #########################
    postgresql_configure_archive_parameters() {
        postgresql_info "Configuring archive parameters"
        postgresql_set_property "archive_mode" "on"
        if is_boolean_yes "$RESTIC_S3_BUCKET_INIT"; then
            postgresql_info "Run command restic -r s3:$S3_ENDPOINT/$S3_BUCKET_NAME init"
            if ! $RESTIC_BINARY_PATH -r s3:$S3_ENDPOINT/$S3_BUCKET_NAME init > /dev/null; then
                postgresql_warn "Failed to init new s3 bucket $S3_BUCKET_NAME"
            fi
        fi
        postgresql_set_property "archive_command" "${RESTIC_BINARY_PATH} -r s3:${S3_ENDPOINT}/${S3_BUCKET_NAME} backup %p"
    }


    ########################
    # Initiate Postgres base backup
    # Globals:
    #   None
    # Arguments:
    #   None
    # Returns:
    #   None
    #########################
    postgresql_base_backup() {
        if [[ ! -d "${POSTGRESQL_BASE_BACKUP_DIR}" ]]; then
            mkdir $POSTGRESQL_BASE_BACKUP_DIR
        else
            rm -rf ${POSTGRESQL_BASE_BACKUP_DIR}/*
        fi
        postgresql_info "Init pg base backup"
        echo "SELECT pg_start_backup('restic');" | postgresql_execute "" "postgres" "$POSTGRES_PASSWORD"
        cp -r ${POSTGRESQL_DATA_DIR} ${POSTGRESQL_BASE_BACKUP_DIR}
        rm -f ${POSTGRESQL_BASE_BACKUP_DIR}/data/postmaster.* ${POSTGRESQL_BASE_BACKUP_DIR}/data/recovery.*
        tar -C ${POSTGRESQL_BASE_BACKUP_DIR} -czvf ${POSTGRESQL_VOLUME_DIR}/basebackup.tar.gz data
        $RESTIC_BINARY_PATH -r s3:$S3_ENDPOINT/$S3_BUCKET_NAME backup ${POSTGRESQL_VOLUME_DIR}/basebackup.tar.gz
        postgresql_info "Stop pg base backup"
        echo "SELECT pg_stop_backup();" | postgresql_execute "" "postgres" "$POSTGRES_PASSWORD"
    }


    eval "$(postgresql_archive_restic_env)"
    if [[ ! -f "${RESTIC_BINARY_PATH}" ]]; then
        postgresql_info "Download restic client"
        curl https://raw.githubusercontent.com/waynesun09/reportportal-operator/master/bin/restic_0.9.6_linux_amd64 -o "$RESTIC_BINARY_PATH"
    fi

    postgresql_info "Update restic client with execute permission"
    chmod +x "$RESTIC_BINARY_PATH"

    postgresql_info "Update archive config"
    is_boolean_yes "$ENABLE_RESTIC_BACKUP" && postgresql_configure_archive_parameters

    if [[ "$POSTGRESQL_REPLICATION_MODE" = "master" ]]; then
        if [[ ! -f ${POSTGRESQL_VOLUME_DIR}/basebackup.tar.gz ]] && is_boolean_yes "$ENABLE_RESTIC_BACKUP"; then
            postgresql_info "Start base backup"
            postgresql_base_backup
        fi
    fi
kind: ConfigMap
metadata:
  name: pg-restic
  labels:
    app: postgresql
  namespace: {{ meta.namespace }}
