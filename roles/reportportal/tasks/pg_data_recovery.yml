- name: Delete PostgreSQL statefulset
  ignore_errors: yes
  k8s:
    state: absent
    api_version: "{{ k8s_item.apiVersion }}"
    kind: "{{ k8s_item.kind }}"
    namespace: "{{ meta.namespace }}"
    name: "{{ k8s_item.metadata.name }}"
  register: delete_result
  until: delete_result.result == {} or (delete_result.result.status is defined and delete_result.result.status == "Success")
  retries: 6
  delay: 10
  when:
  - k8s_item is defined
  - k8s_item.apiVersion is defined
  - k8s_item.kind is defined
  - k8s_item.metadata is defined
  - k8s_item.metadata.name is defined
  with_items:
  - "{{ query('k8s', namespace=meta.namespace, kind='StatefulSet', label_selector='app=postgresql') }}"
  - "{{ query('k8s', namespace=meta.namespace, kind='ReplicaSet', label_selector='app=postgresql') }}"
  - "{{ query('k8s', namespace=meta.namespace, kind='Pod', label_selector='app=postgresql') }}"
  loop_control:
    loop_var: k8s_item

- name: Create Postgresql statefulset
  k8s:
    state: present
    definition: "{{ lookup('template', 'pg-statefulset.yaml.j2') | from_yaml }}"

- name: Wait Postgresql StatefulSet Pod replica status to running
  ignore_errors: yes
  k8s_info:
    kind: Pod
    label_selectors:
      - app = postgresql
      - controller-revision-hash = k8s_item.status.currentRevision
    namespace: "{{ meta.namespace }}"
  register: pod_result
  until: pod_result.resources[0].status is defined and pod_result.resources[0].status.phase is defined and pod_result.resources[0].status.phase == "Running"
  retries: 20
  delay: 10
  when:
    - k8s_item is defined
    - k8s_item.status is defined
    - k8s_item.status.currentRevision is defined
    - k8s_item.status.currentRevision == 1
  with_items:
  - "{{ query('k8s', namespace=meta.namespace, kind='StatefulSet', label_selector='app=postgresql') }}"
  loop_control:
    loop_var: k8s_item

- name: Wait for Postgresql port to become open
  wait_for:
    host: postgresql
    port: 5432
    delay: 60
    state: started
    timeout: 36000
